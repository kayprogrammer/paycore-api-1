# Generated by Django 5.2.6 on 2025-10-20 03:01

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("login_success", "Login Success"),
                            ("login_failed", "Login Failed"),
                            ("logout", "Logout"),
                            ("password_change", "Password Change"),
                            ("password_reset", "Password Reset"),
                            ("mfa_enabled", "MFA Enabled"),
                            ("mfa_disabled", "MFA Disabled"),
                            ("biometrics_enabled", "Biometrics Enabled"),
                            ("biometrics_disabled", "Biometrics Disabled"),
                            ("account_created", "Account Created"),
                            ("account_updated", "Account Updated"),
                            ("account_deleted", "Account Deleted"),
                            ("account_suspended", "Account Suspended"),
                            ("account_reactivated", "Account Reactivated"),
                            ("email_verified", "Email Verified"),
                            ("profile_updated", "Profile Updated"),
                            ("transaction_created", "Transaction Created"),
                            ("transaction_completed", "Transaction Completed"),
                            ("transaction_failed", "Transaction Failed"),
                            ("transaction_reversed", "Transaction Reversed"),
                            ("payment_initiated", "Payment Initiated"),
                            ("payment_completed", "Payment Completed"),
                            ("payment_failed", "Payment Failed"),
                            ("payment_refunded", "Payment Refunded"),
                            ("loan_applied", "Loan Applied"),
                            ("loan_approved", "Loan Approved"),
                            ("loan_rejected", "Loan Rejected"),
                            ("loan_disbursed", "Loan Disbursed"),
                            ("loan_repayment", "Loan Repayment"),
                            ("investment_created", "Investment Created"),
                            ("investment_updated", "Investment Updated"),
                            ("investment_withdrawn", "Investment Withdrawn"),
                            ("kyc_submitted", "KYC Submitted"),
                            ("kyc_approved", "KYC Approved"),
                            ("kyc_rejected", "KYC Rejected"),
                            ("document_uploaded", "Document Uploaded"),
                            ("document_verified", "Document Verified"),
                            ("suspicious_activity", "Suspicious Activity"),
                            ("failed_login_attempts", "Failed Login Attempts"),
                            ("ip_blocked", "IP Blocked"),
                            ("device_registered", "Device Registered"),
                            ("device_removed", "Device Removed"),
                            ("data_viewed", "Data Viewed"),
                            ("data_exported", "Data Exported"),
                            ("sensitive_data_access", "Sensitive Data Access"),
                            ("admin_action", "Admin Action"),
                            ("bulk_operation", "Bulk Operation"),
                            ("settings_changed", "Settings Changed"),
                            ("system_error", "System Error"),
                            ("api_call", "API Call"),
                            ("scheduled_task", "Scheduled Task"),
                        ],
                        db_index=True,
                        help_text="Type of event that occurred",
                        max_length=50,
                    ),
                ),
                (
                    "event_category",
                    models.CharField(
                        choices=[
                            ("authentication", "Authentication"),
                            ("authorization", "Authorization"),
                            ("account", "Account Management"),
                            ("transaction", "Transaction"),
                            ("payment", "Payment"),
                            ("loan", "Loan"),
                            ("investment", "Investment"),
                            ("compliance", "Compliance"),
                            ("support", "Support"),
                            ("notification", "Notification"),
                            ("security", "Security"),
                            ("system", "System"),
                            ("data_access", "Data Access"),
                            ("data_modification", "Data Modification"),
                            ("admin", "Admin Action"),
                        ],
                        db_index=True,
                        help_text="Category of the event",
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        db_index=True,
                        default="info",
                        help_text="Severity level of the event",
                        max_length=20,
                    ),
                ),
                (
                    "user_email",
                    models.EmailField(
                        blank=True,
                        help_text="User email at time of event (preserved if user deleted)",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        db_index=True,
                        help_text="IP address of the request",
                        null=True,
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="User agent string from request",
                        null=True,
                    ),
                ),
                (
                    "device_type",
                    models.CharField(
                        blank=True,
                        help_text="Device type (mobile, web, tablet)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        help_text="Description of the action performed", max_length=255
                    ),
                ),
                (
                    "resource_type",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Type of resource affected (e.g., User, Transaction, Loan)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "resource_id",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="ID of the affected resource",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "request_method",
                    models.CharField(
                        blank=True,
                        help_text="HTTP method (GET, POST, PUT, DELETE, etc.)",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "request_path",
                    models.CharField(
                        blank=True,
                        help_text="API endpoint path",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "request_data",
                    models.JSONField(
                        blank=True,
                        help_text="Request payload (sanitized - no sensitive data)",
                        null=True,
                    ),
                ),
                (
                    "response_status",
                    models.IntegerField(
                        blank=True, help_text="HTTP response status code", null=True
                    ),
                ),
                (
                    "old_values",
                    models.JSONField(
                        blank=True, help_text="Previous values before change", null=True
                    ),
                ),
                (
                    "new_values",
                    models.JSONField(
                        blank=True, help_text="New values after change", null=True
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="Additional context and metadata",
                        null=True,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Error message if action failed",
                        null=True,
                    ),
                ),
                (
                    "stack_trace",
                    models.TextField(
                        blank=True, help_text="Stack trace for errors", null=True
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Session identifier",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "is_compliance_event",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Flag for events requiring compliance audit",
                    ),
                ),
                (
                    "retention_period_days",
                    models.IntegerField(
                        default=2555, help_text="How long to retain this log (in days)"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who performed the action (null for system events)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit Log",
                "verbose_name_plural": "Audit Logs",
                "db_table": "audit_logs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["-created_at"], name="audit_logs_created_43fcd6_idx"
                    ),
                    models.Index(
                        fields=["user", "-created_at"],
                        name="audit_logs_user_id_6193b2_idx",
                    ),
                    models.Index(
                        fields=["event_type", "-created_at"],
                        name="audit_logs_event_t_d2baa2_idx",
                    ),
                    models.Index(
                        fields=["event_category", "-created_at"],
                        name="audit_logs_event_c_622adb_idx",
                    ),
                    models.Index(
                        fields=["severity", "-created_at"],
                        name="audit_logs_severit_a4af98_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "-created_at"],
                        name="audit_logs_ip_addr_190b84_idx",
                    ),
                    models.Index(
                        fields=["resource_type", "resource_id"],
                        name="audit_logs_resourc_bda8a6_idx",
                    ),
                    models.Index(
                        fields=["is_compliance_event", "-created_at"],
                        name="audit_logs_is_comp_0fb0b4_idx",
                    ),
                ],
            },
        ),
    ]
