# Generated by Django 5.2.6 on 2025-10-10 13:02

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("transactions", "0005_alter_transaction_transaction_type"),
        ("wallets", "0005_delete_virtualcard"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "invoice_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                ("customer_name", models.CharField(max_length=200)),
                ("customer_email", models.EmailField(max_length=254)),
                (
                    "customer_phone",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("customer_address", models.TextField(blank=True, null=True)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "amount_paid",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                ("amount_due", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("sent", "Sent"),
                            ("paid", "Paid"),
                            ("partially_paid", "Partially Paid"),
                            ("overdue", "Overdue"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("issue_date", models.DateField()),
                ("due_date", models.DateField()),
                ("paid_at", models.DateTimeField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to="wallets.wallet",
                    ),
                ),
            ],
            options={
                "db_table": "invoices",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InvoiceItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "item_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("description", models.CharField(max_length=500)),
                (
                    "quantity",
                    models.DecimalField(decimal_places=2, default=1, max_digits=10),
                ),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=20)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="payments.invoice",
                    ),
                ),
            ],
            options={
                "db_table": "invoice_items",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentLink",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "link_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                ("is_amount_fixed", models.BooleanField(default=True)),
                (
                    "min_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                (
                    "max_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("expired", "Expired"),
                            ("completed", "Completed"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("is_single_use", models.BooleanField(default=False)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("redirect_url", models.URLField(blank=True, null=True)),
                ("logo_url", models.URLField(blank=True, null=True)),
                ("brand_color", models.CharField(default="#3B82F6", max_length=7)),
                ("views_count", models.IntegerField(default=0)),
                ("payments_count", models.IntegerField(default=0)),
                (
                    "total_collected",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_links",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_links",
                        to="wallets.wallet",
                    ),
                ),
            ],
            options={
                "db_table": "payment_links",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "payment_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("payer_name", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "payer_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("payer_phone", models.CharField(blank=True, max_length=20, null=True)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "fee_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                ("net_amount", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "reference",
                    models.CharField(db_index=True, max_length=100, unique=True),
                ),
                (
                    "external_reference",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "invoice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payments",
                        to="payments.invoice",
                    ),
                ),
                (
                    "merchant_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="merchant_payments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "merchant_wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="merchant_payments_received",
                        to="wallets.wallet",
                    ),
                ),
                (
                    "payer_wallet",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="merchant_payments_made",
                        to="wallets.wallet",
                    ),
                ),
                (
                    "transaction",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="merchant_payment",
                        to="transactions.transaction",
                    ),
                ),
                (
                    "payment_link",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payments",
                        to="payments.paymentlink",
                    ),
                ),
            ],
            options={
                "db_table": "payments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="invoice",
            name="payment_link",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="invoices",
                to="payments.paymentlink",
            ),
        ),
        migrations.CreateModel(
            name="MerchantAPIKey",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "key_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("key", models.CharField(db_index=True, max_length=64, unique=True)),
                ("prefix", models.CharField(max_length=8)),
                ("is_active", models.BooleanField(default=True)),
                ("is_test_mode", models.BooleanField(default=False)),
                ("can_create_links", models.BooleanField(default=True)),
                ("can_create_invoices", models.BooleanField(default=True)),
                ("can_view_payments", models.BooleanField(default=True)),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                ("requests_count", models.IntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_keys",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "merchant_api_keys",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_active"],
                        name="merchant_ap_user_id_798081_idx",
                    ),
                    models.Index(fields=["key"], name="merchant_ap_key_7bf2d7_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="paymentlink",
            index=models.Index(
                fields=["user", "-created_at"], name="payment_lin_user_id_6518e6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentlink",
            index=models.Index(fields=["slug"], name="payment_lin_slug_24947e_idx"),
        ),
        migrations.AddIndex(
            model_name="paymentlink",
            index=models.Index(fields=["status"], name="payment_lin_status_71eef8_idx"),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["merchant_user", "-created_at"],
                name="payments_merchan_a20116_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["reference"], name="payments_referen_2b1f06_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["status", "-created_at"], name="payments_status_db6b16_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["user", "-created_at"], name="invoices_user_id_b72724_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["invoice_number"], name="invoices_invoice_7778bc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["status", "-due_date"], name="invoices_status_36d06c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["customer_email"], name="invoices_custome_b6c506_idx"
            ),
        ),
    ]
