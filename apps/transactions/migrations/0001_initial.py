# Generated by Django 5.2.6 on 2025-09-28 00:05

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wallets", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "transaction_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("transfer", "Transfer"),
                            ("deposit", "Deposit"),
                            ("withdrawal", "Withdrawal"),
                            ("payment", "Payment"),
                            ("refund", "Refund"),
                            ("fee", "Fee"),
                            ("hold", "Hold"),
                            ("release", "Release"),
                            ("split_payment", "Split Payment"),
                            ("recurring_payment", "Recurring Payment"),
                            ("qr_payment", "QR Payment"),
                            ("virtual_card", "Virtual Card"),
                            ("adjustment", "Adjustment"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("reversed", "Reversed"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[
                            ("inbound", "Inbound"),
                            ("outbound", "Outbound"),
                            ("internal", "Internal"),
                        ],
                        max_length=20,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=8, max_digits=20)),
                (
                    "fee_amount",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                ("net_amount", models.DecimalField(decimal_places=8, max_digits=20)),
                (
                    "description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("reference", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "external_reference",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("split_payment_id", models.UUIDField(blank=True, null=True)),
                ("recurring_payment_id", models.UUIDField(blank=True, null=True)),
                ("qr_code_id", models.UUIDField(blank=True, null=True)),
                ("virtual_card_id", models.UUIDField(blank=True, null=True)),
                (
                    "from_balance_before",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "from_balance_after",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "to_balance_before",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "to_balance_after",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "initiated_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("failed_at", models.DateTimeField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "failure_reason",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=500, null=True)),
                ("device_id", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "from_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sent_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "from_wallet_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions_debit",
                        to="wallets.wallet",
                    ),
                ),
                (
                    "to_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="received_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "to_wallet",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions_credit",
                        to="wallets.wallet",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TransactionDispute",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "dispute_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("opened", "Opened"),
                            ("investigating", "Investigating"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="opened",
                        max_length=20,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("unauthorized", "Unauthorized Transaction"),
                            ("duplicate", "Duplicate Charge"),
                            ("not_received", "Services/Goods Not Received"),
                            ("defective", "Defective Product/Service"),
                            ("refund_not_processed", "Refund Not Processed"),
                            ("other", "Other"),
                        ],
                        max_length=30,
                    ),
                ),
                ("reason", models.TextField()),
                (
                    "disputed_amount",
                    models.DecimalField(decimal_places=8, max_digits=20),
                ),
                ("resolution_notes", models.TextField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("evidence", models.JSONField(blank=True, default=dict)),
                (
                    "initiated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="initiated_disputes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_disputes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="disputes",
                        to="transactions.transaction",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TransactionFee",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                ("fee_type", models.CharField(max_length=50)),
                ("amount", models.DecimalField(decimal_places=8, max_digits=20)),
                (
                    "percentage",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=5, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fees",
                        to="transactions.transaction",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TransactionHold",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                ("wallet_id", models.UUIDField()),
                ("amount_held", models.DecimalField(decimal_places=8, max_digits=20)),
                (
                    "released_amount",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("is_released", models.BooleanField(default=False)),
                ("released_at", models.DateTimeField(blank=True, null=True)),
                (
                    "transaction",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hold",
                        to="transactions.transaction",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TransactionLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "previous_status",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("new_status", models.CharField(max_length=20)),
                ("reason", models.CharField(blank=True, max_length=200, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="transactions.transaction",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_id"], name="transaction_transac_fee96f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["from_user", "created_at"],
                name="transaction_from_us_77bc68_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["to_user", "created_at"], name="transaction_to_user_8cc3dd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["status", "created_at"], name="transaction_status_d2f80b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["type", "created_at"], name="transaction_type_a267f0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["from_wallet_id"], name="transaction_from_wa_982066_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["to_wallet_id"], name="transaction_to_wall_b17f16_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["reference"], name="transaction_referen_923a88_idx"
            ),
        ),
    ]
