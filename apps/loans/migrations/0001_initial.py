# Generated by Django 5.2.6 on 2025-10-12 14:51

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("transactions", "0005_alter_transaction_transaction_type"),
        ("wallets", "0005_delete_virtualcard"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LoanProduct",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "product_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "product_type",
                    models.CharField(
                        choices=[
                            ("personal", "Personal Loan"),
                            ("business", "Business Loan"),
                            ("payday", "Payday Loan"),
                            ("emergency", "Emergency Loan"),
                            ("education", "Education Loan"),
                            ("auto", "Auto Loan"),
                            ("home", "Home Loan"),
                        ],
                        max_length=20,
                    ),
                ),
                ("min_amount", models.DecimalField(decimal_places=2, max_digits=20)),
                ("max_amount", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "min_interest_rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Annual interest rate percentage",
                        max_digits=5,
                    ),
                ),
                (
                    "max_interest_rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Annual interest rate percentage",
                        max_digits=5,
                    ),
                ),
                (
                    "min_tenure_months",
                    models.PositiveIntegerField(
                        help_text="Minimum loan duration in months"
                    ),
                ),
                (
                    "max_tenure_months",
                    models.PositiveIntegerField(
                        help_text="Maximum loan duration in months"
                    ),
                ),
                (
                    "processing_fee_percentage",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "processing_fee_fixed",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "late_payment_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "early_repayment_fee_percentage",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "min_credit_score",
                    models.PositiveIntegerField(
                        default=300, help_text="Minimum credit score required"
                    ),
                ),
                ("requires_collateral", models.BooleanField(default=False)),
                ("requires_guarantor", models.BooleanField(default=False)),
                (
                    "min_account_age_days",
                    models.PositiveIntegerField(
                        default=30, help_text="Minimum account age in days"
                    ),
                ),
                (
                    "allowed_repayment_frequencies",
                    models.JSONField(
                        default=list,
                        help_text="List of allowed repayment frequencies: daily, weekly, biweekly, monthly, quarterly",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "eligibility_criteria",
                    models.JSONField(
                        default=dict,
                        help_text="Additional eligibility criteria as JSON (e.g., employment status, income requirements)",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="loan_products",
                        to="wallets.currency",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LoanApplication",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "application_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    "requested_amount",
                    models.DecimalField(decimal_places=2, max_digits=20),
                ),
                (
                    "approved_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                (
                    "interest_rate",
                    models.DecimalField(
                        decimal_places=2, help_text="Annual interest rate", max_digits=5
                    ),
                ),
                (
                    "tenure_months",
                    models.PositiveIntegerField(help_text="Loan duration in months"),
                ),
                (
                    "repayment_frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("biweekly", "Bi-Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "processing_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "total_interest",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "total_repayable",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "monthly_repayment",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                ("purpose", models.CharField(max_length=200)),
                ("purpose_details", models.TextField(blank=True, null=True)),
                (
                    "employment_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "employer_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "monthly_income",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                (
                    "collateral_type",
                    models.CharField(
                        choices=[
                            ("none", "No Collateral"),
                            ("property", "Property"),
                            ("vehicle", "Vehicle"),
                            ("savings", "Savings Account"),
                            ("investment", "Investment Portfolio"),
                            ("other", "Other"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                (
                    "collateral_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                ("collateral_description", models.TextField(blank=True, null=True)),
                (
                    "guarantor_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "guarantor_phone",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "guarantor_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "guarantor_relationship",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("credit_score", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "credit_score_band",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("excellent", "Excellent (750-850)"),
                            ("good", "Good (700-749)"),
                            ("fair", "Fair (650-699)"),
                            ("poor", "Poor (600-649)"),
                            ("very_poor", "Very Poor (300-599)"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "risk_assessment",
                    models.JSONField(default=dict, help_text="Risk assessment details"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("under_review", "Under Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("disbursed", "Disbursed"),
                            ("active", "Active"),
                            ("overdue", "Overdue"),
                            ("defaulted", "Defaulted"),
                            ("paid", "Fully Paid"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                ("disbursed_at", models.DateTimeField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "disbursement_transaction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="loan_disbursements",
                        to="transactions.transaction",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_loan_applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="loan_applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="loan_applications",
                        to="wallets.wallet",
                    ),
                ),
                (
                    "loan_product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="applications",
                        to="loans.loanproduct",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LoanRepaymentSchedule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "schedule_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    "installment_number",
                    models.PositiveIntegerField(
                        help_text="Installment sequence number"
                    ),
                ),
                ("due_date", models.DateField()),
                (
                    "principal_amount",
                    models.DecimalField(decimal_places=2, max_digits=20),
                ),
                (
                    "interest_amount",
                    models.DecimalField(decimal_places=2, max_digits=20),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "amount_paid",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "outstanding_amount",
                    models.DecimalField(decimal_places=2, max_digits=20),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("overdue", "Overdue"),
                            ("partial", "Partially Paid"),
                            ("missed", "Missed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("paid_at", models.DateTimeField(blank=True, null=True)),
                ("days_overdue", models.PositiveIntegerField(default=0)),
                (
                    "late_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "loan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repayment_schedules",
                        to="loans.loanapplication",
                    ),
                ),
            ],
            options={
                "ordering": ["loan", "installment_number"],
            },
        ),
        migrations.CreateModel(
            name="LoanRepayment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "repayment_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "principal_paid",
                    models.DecimalField(decimal_places=2, max_digits=20),
                ),
                ("interest_paid", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "late_fee_paid",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                ("is_early_repayment", models.BooleanField(default=False)),
                (
                    "early_repayment_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "reference",
                    models.CharField(db_index=True, max_length=100, unique=True),
                ),
                (
                    "external_reference",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("status", models.CharField(default="completed", max_length=20)),
                ("payment_method", models.CharField(default="wallet", max_length=50)),
                ("notes", models.TextField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "loan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repayments",
                        to="loans.loanapplication",
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="loan_repayments",
                        to="transactions.transaction",
                    ),
                ),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="loan_repayments",
                        to="wallets.wallet",
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        blank=True,
                        help_text="Specific schedule this payment applies to",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="repayments",
                        to="loans.loanrepaymentschedule",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CreditScore",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "score_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "score",
                    models.PositiveIntegerField(help_text="Credit score (300-850)"),
                ),
                (
                    "score_band",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent (750-850)"),
                            ("good", "Good (700-749)"),
                            ("fair", "Fair (650-699)"),
                            ("poor", "Poor (600-649)"),
                            ("very_poor", "Very Poor (300-599)"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "payment_history_score",
                    models.PositiveIntegerField(
                        default=0, help_text="Score based on payment history"
                    ),
                ),
                (
                    "credit_utilization_score",
                    models.PositiveIntegerField(
                        default=0, help_text="Score based on credit usage"
                    ),
                ),
                (
                    "account_age_score",
                    models.PositiveIntegerField(
                        default=0, help_text="Score based on account age"
                    ),
                ),
                (
                    "loan_history_score",
                    models.PositiveIntegerField(
                        default=0, help_text="Score based on loan history"
                    ),
                ),
                ("total_loans", models.PositiveIntegerField(default=0)),
                ("active_loans", models.PositiveIntegerField(default=0)),
                ("completed_loans", models.PositiveIntegerField(default=0)),
                ("defaulted_loans", models.PositiveIntegerField(default=0)),
                ("on_time_payments", models.PositiveIntegerField(default=0)),
                ("late_payments", models.PositiveIntegerField(default=0)),
                ("missed_payments", models.PositiveIntegerField(default=0)),
                (
                    "total_borrowed",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "total_repaid",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "current_debt",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low Risk"),
                            ("medium", "Medium Risk"),
                            ("high", "High Risk"),
                            ("very_high", "Very High Risk"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("account_age_days", models.PositiveIntegerField(default=0)),
                (
                    "factors",
                    models.JSONField(
                        default=dict, help_text="Detailed scoring factors"
                    ),
                ),
                (
                    "recommendations",
                    models.JSONField(
                        default=list, help_text="Recommendations to improve score"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="credit_scores",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "-created_at"],
                        name="loans_credi_user_id_128d88_idx",
                    ),
                    models.Index(fields=["score"], name="loans_credi_score_1ce23c_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="loanproduct",
            index=models.Index(
                fields=["product_type", "is_active"],
                name="loans_loanp_product_f1191e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="loanproduct",
            index=models.Index(
                fields=["currency", "is_active"], name="loans_loanp_currenc_22ac43_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="loanapplication",
            index=models.Index(
                fields=["user", "-created_at"], name="loans_loana_user_id_85c2cc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="loanapplication",
            index=models.Index(
                fields=["status", "-created_at"], name="loans_loana_status_3ae691_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="loanapplication",
            index=models.Index(
                fields=["loan_product", "status"], name="loans_loana_loan_pr_faad20_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="loanrepaymentschedule",
            index=models.Index(
                fields=["loan", "status"], name="loans_loanr_loan_id_928991_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="loanrepaymentschedule",
            index=models.Index(
                fields=["due_date", "status"], name="loans_loanr_due_dat_2ab221_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="loanrepaymentschedule",
            unique_together={("loan", "installment_number")},
        ),
        migrations.AddIndex(
            model_name="loanrepayment",
            index=models.Index(
                fields=["loan", "-created_at"], name="loans_loanr_loan_id_cee1c2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="loanrepayment",
            index=models.Index(
                fields=["reference"], name="loans_loanr_referen_78bd8d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="loanrepayment",
            index=models.Index(
                fields=["wallet", "-created_at"], name="loans_loanr_wallet__14daf1_idx"
            ),
        ),
    ]
