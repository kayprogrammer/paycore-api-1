# Generated by Django 5.2.6 on 2025-09-26 16:07

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("symbol", models.CharField(max_length=10)),
                ("decimal_places", models.PositiveIntegerField(default=2)),
                ("is_crypto", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "exchange_rate_usd",
                    models.DecimalField(decimal_places=8, default=1.0, max_digits=20),
                ),
                (
                    "icon",
                    models.ImageField(blank=True, null=True, upload_to="currencies/"),
                ),
            ],
            options={
                "verbose_name_plural": "Currencies",
            },
        ),
        migrations.CreateModel(
            name="SplitPayment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "payment_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("total_amount", models.DecimalField(decimal_places=8, max_digits=20)),
                ("description", models.CharField(max_length=200)),
                (
                    "split_type",
                    models.CharField(
                        choices=[
                            ("equal", "Equal Split"),
                            ("custom", "Custom Split"),
                            ("percentage", "Percentage Split"),
                        ],
                        default="equal",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("partial", "Partially Paid"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_split_payments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="wallets.currency",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Wallet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "wallet_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="User-defined wallet name", max_length=100
                    ),
                ),
                (
                    "wallet_type",
                    models.CharField(
                        choices=[
                            ("main", "Main Wallet"),
                            ("savings", "Savings Wallet"),
                            ("business", "Business Wallet"),
                            ("crypto", "Crypto Wallet"),
                            ("virtual", "Virtual Wallet"),
                        ],
                        default="main",
                        max_length=20,
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                (
                    "available_balance",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                (
                    "pending_balance",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                (
                    "daily_limit",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "monthly_limit",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "daily_spent",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                (
                    "monthly_spent",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                (
                    "last_daily_reset",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "last_monthly_reset",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("frozen", "Frozen"),
                            ("suspended", "Suspended"),
                            ("closed", "Closed"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("is_default", models.BooleanField(default=False)),
                ("pin_hash", models.CharField(blank=True, max_length=255, null=True)),
                ("requires_pin", models.BooleanField(default=False)),
                ("requires_biometric", models.BooleanField(default=False)),
                ("description", models.TextField(blank=True, null=True)),
                ("last_transaction_at", models.DateTimeField(blank=True, null=True)),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="wallets",
                        to="wallets.currency",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wallets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VirtualCard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                ("card_number", models.CharField(max_length=19, unique=True)),
                ("card_holder_name", models.CharField(max_length=100)),
                (
                    "expiry_month",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ]
                    ),
                ),
                ("expiry_year", models.PositiveIntegerField()),
                ("cvv", models.CharField(max_length=4)),
                (
                    "spending_limit",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_frozen", models.BooleanField(default=False)),
                (
                    "total_spent",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                ("nickname", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "created_for_merchant",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="virtual_cards",
                        to="wallets.wallet",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RecurringPayment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "payment_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "to_external",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("amount", models.DecimalField(decimal_places=8, max_digits=20)),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        max_length=20,
                    ),
                ),
                ("next_payment_date", models.DateTimeField()),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("auto_retry", models.BooleanField(default=True)),
                ("retry_count", models.PositiveIntegerField(default=0)),
                ("max_retries", models.PositiveIntegerField(default=3)),
                ("description", models.CharField(max_length=200)),
                ("reference", models.CharField(blank=True, max_length=100, null=True)),
                ("last_payment_at", models.DateTimeField(blank=True, null=True)),
                ("total_payments_made", models.PositiveIntegerField(default=0)),
                (
                    "from_wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outgoing_recurring",
                        to="wallets.wallet",
                    ),
                ),
                (
                    "to_wallet",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_recurring",
                        to="wallets.wallet",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="QRCode",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                (
                    "qr_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "qr_image",
                    models.ImageField(blank=True, null=True, upload_to="qr_codes/"),
                ),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("is_single_use", models.BooleanField(default=False)),
                ("is_amount_fixed", models.BooleanField(default=False)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("times_used", models.PositiveIntegerField(default=0)),
                (
                    "total_received",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="qr_codes",
                        to="wallets.wallet",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SplitPaymentParticipant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                ("amount_owed", models.DecimalField(decimal_places=8, max_digits=20)),
                (
                    "amount_paid",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                (
                    "percentage",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("overdue", "Overdue"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("paid_at", models.DateTimeField(blank=True, null=True)),
                ("reminded_at", models.DateTimeField(blank=True, null=True)),
                (
                    "split_payment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants",
                        to="wallets.splitpayment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("split_payment", "user")},
            },
        ),
        migrations.AddIndex(
            model_name="wallet",
            index=models.Index(
                fields=["user", "currency"], name="wallets_wal_user_id_49444d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="wallet",
            index=models.Index(
                fields=["wallet_id"], name="wallets_wal_wallet__aaa876_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="wallet",
            index=models.Index(fields=["status"], name="wallets_wal_status_ebf5d9_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="wallet",
            unique_together={("user", "currency", "is_default")},
        ),
    ]
